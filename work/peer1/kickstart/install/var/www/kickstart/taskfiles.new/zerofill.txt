#!/bin/bash
# =======================================================================
# Company:              ServerBeach
# Copyright(c):         ServerBeach, Ltd. 2006-2008
# Project:              Kickstart Sub-System
# Pri. Code Devloper:   SB Development Team
# Creation Date:        ~2006-09-14
#
# File Type:            Taskfile     
# File Name:            zerofill.txt
# Dependencies:         The SBRescue PXE RAM Disk Envrionment.    
#
# Discription:
# This is the default task file the gets loaded and executed on a local
# server by the SBRescue ram disk image.
#
# The zerofill task is used to carry out the "ZEROFILL" (or Wipe) of a 
# server that has been released of its resources from the system.  
# =======================================================================

# Source the following files and include them as part of this script
. /etc/local.sh
. /usr/lib/sbks_lib.sh

# Export the following environment variable
export KSIPADDR MACADDR IPADDR REALIP

#find the datacenter
DC="$(grep 'kslan.' /etc/resolv.conf | cut -d . -f 2-)"
export DC

#save the name of the verify login script
verify="verify_login.pl";
# Get our audit.py file
echo -n "Fetching $verify from Kickstart..."
wget http://kickstart.${DC}/kickstart/taskfiles.new/${verify} -O ${verify} >> /dev/null 2>&1
if [ $? -ne 0 ]; then
        	echo -e "failed.\nUnable to download $verify from kickstart.$DC" >&2
	        exit 1
elif [ ! -s $verify ]; then
	        echo -e "failed.\nDownloaded script but has no file size." >&2
	        exit 2
else
		echo -e "done.\n"
fi

#verify the box
perl verify_login.pl zerofill

# Register the current state of the kick using register.cgi
# By calling this web cgi that sits on the KS server it can register the current state of the kick.
post "http://${KSIPADDR}/cgi-bin/register.cgi" "macaddr=${MACADDR}&ipaddr=${IPADDR}&status=zerofill"

cat <<EOF
################################################################################
################################################################################
##                                                                            ##
##    This server is set to zerofill.  The zerofill procedure will start in   ##
##                                                                            ##
##                         LESS THAN FIVE MINUTES                             ##
##                                                                            ##
##  If you do not want this server to zerofill, shut it down now and contact  ##
##                  a developer as soon as possible!                          ##
##                                                                            ##
################################################################################
################################################################################
EOF

sleep 600

/usr/bin/zerofill.sh start
partprobe
for disc in hda hdb hdc hdd ; do
    parted -s /dev/$disc mklabel msdos
done
for disc in sda sdb sdc sdd ; do
    parted -s /dev/$disc mklabel msdos
done

CARD=$(lspci | grep -i raid | egrep -o "3ware|LSI")
if [ "$CARD" == "3ware" ] ; then
        wget http://${KSIPADDR}/kickstart/taskfiles.new/devices/13c1/1004/cli.tgz
        tar xzf cli.tgz -C /sbin/
        CTL=$(tw_cli show | grep c[0-9] | awk '{ print $1 }')
        for i in `tw_cli /$CTL show | grep p[0-9] | grep -o u[0-9]` ; do
                tw_cli /$CTL/$i del quiet
        done
elif [ "$CARD" == "LSI" ] ; then
        wget http://${KSIPADDR}/kickstart/taskfiles.new/devices/1000/0060/cli.tgz
        tar xzf cli.tgz -C /sbin/
        MegaCli -cfgclr -aall
fi

true

if [ $? -eq 0 ] ; then
    post "http://${KSIPADDR}/cgi-bin/register.cgi" "macaddr=${MACADDR}&ipaddr=${IPADDR}&status=zerodone"
else
    post "http://${KSIPADDR}/cgi-bin/register.cgi" "macaddr=${MACADDR}&ipaddr=${IPADDR}&status=zero_fail"
fi

# Halt the system, do not power off. Leave in "suspended" state.
halt -fh

exit 0
