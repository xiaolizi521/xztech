#!/bin/bash

. /etc/local.sh
. /usr/lib/sbks_lib.sh
export KSIPADDR MACADDR IPADDR REALIP

# These are the only variables that need to be changed between windows versions
winver="2000"
subver="server"
target="/mnt/sysimage/"

################################################################################
# Update our status
post "http://${KSIPADDR}/cgi-bin/register.cgi" "macaddr=${MACADDR}&ipaddr=${REALIP}&status=win2k_copy"

################################################################################
# Mount the target drive and make sure it mounted

# Make sure we have discs :)
havepata=0
havesata=0                                                     
postlog "INFO" "Checking for existence of drives"              
fdisk -l /dev/hda | grep ^Disk >/dev/null && havepata=1
fdisk -l /dev/sda | grep ^Disk >/dev/null && havesata=1

if [ $havepata -eq 1 ] ; then
    disc="/dev/hda"
    hdparm -d1 $disc
elif [ $havesata -eq 1 ] ; then
    disc="/dev/sda"
else
    postlog "ERR" "No PATA or SATA/SCSI drives found" "win2k_copyfail"
fi

mount -t vfat "${disc}1" $target 2>/dev/null
grep "${disc}1" /proc/mounts || postlog "ERR" "Mounting ${disc}1 failed" "win2k_copyfail"

################################################################################
# Get our dynamic information

mkdir -p "${target}/skel"
post "http://${KSIPADDR}/cgi-bin/postconf.cgi" "macaddr=${MACADDR}" "${target}/skel/postconf.txt"
post "http://${KSIPADDR}/cgi-bin/unattend.cgi" "macaddr=${MACADDR}" "${target}/skel/unattend.txt"
post "http://${KSIPADDR}/cgi-bin/licenses.cgi" "macaddr=${MACADDR}" "/tmp/licenses.tgz"

. ${target}/skel/postconf.txt

havelicenses=0
if [ -s "/tmp/licenses.tgz" ] ; then
	havelicenses=1
	tar -C /tmp -zxf /tmp/licenses.tgz
	mkdir -p "${target}/skel/licenses"
fi

################################################################################
# Update our status     
post "http://${KSIPADDR}/cgi-bin/register.cgi" "macaddr=${MACADDR}&ipaddr=${REALIP}&status=win2k_copy"

################################################################################
# Rsync the root files and skel tree
rsync -av --files-from=:/windows/${winver}/${subver}/filelist.root rsync://${KSIPADDR}/installs/windows/${winver}/${subver}/ $target

################################################################################
# Rsync Web Matrix stuff if we need it
if [ ${ASPNET} -eq 1 ] ; then
    rsync -av --files-from=:/windows/${winver}/${subver}/filelist.webmtrx rsync://${KSIPADDR}/installs/windows/${winver}/${subver}/ $target
fi

################################################################################
# Get ensim if we need it
if [ x"${PANEL}" == x"ensim36" ] || [ x"${PANEL}" == x"ensim" ] ; then
	# Make sure we have licenses
    if [ $havelicenses -eq 1 ] ; then
	    esmlic=`find /tmp/licenses -name W\*.lic`
        if [ $esmlic ] && [ -s $esmlic ] ; then
            cp -f $esmlic $target/skel/licenses/ensimpro.lic
            if [ -s "$target/skel/licenses/ensimpro.lic" ] ; then
                postlog "INFO" "$esmlic copied to skel/licenses/ensimpro.lic"
            else 
                postlog "ERR" "$esmlic license copy failed" "win2k_copyfail"
            fi
        else
            postlog "ERR" "Ensim license not found" "win2k_copyfail"
        fi
    else
        postlog "ERR" "No licenses available" "win2k_copyfail"
    fi

    # Remove this after Steven fixes the 3.6 installer for Windows 2000
    if [ $winver -eq 2000 ] ; then esmver="3.2"
    else esmver="3.6" ; fi

    rsync -av --files-from=:/panels/ensim/windows/pro/$esmver/windows${winver}/filelist.ensim rsync://${KSIPADDR}/installs/panels/ensim/windows/pro/$esmver/windows${winver}/ $target/skel/software/ensim/

    if [ -s $target/skel/software/ensim/filelist.ensim ] ; then
        postlog "INFO" "rsync of Ensim data complete"
    else
        postlog "ERR" "rsync of Ensim data incomplete"
    fi

elif [ x"$PANEL" == x"helm31" ] ; then

    rsync -av --files-from=:/panels/helm/filelist.helm31 rsync://${KSIPADDR}/installs/panels/helm/ $target/skel/software/helm/

    if [ -s $target/skel/software/helm/filelist.helm31 ] ; then
        postlog "INFO" "rsync of Helm data complete"
    else
        postlog "ERR" "rsync of Helm data incomplete"
    fi

elif [ x"$PANEL" == x"plesk65" ] ; then
	# Make sure we have licenses
    if [ $havelicenses -eq 1 ] ;then
        psa_license=`find /tmp/licenses -name 'PLSK*.exe'`
        if [ $psa_license ] && [ -s $psa_license ] ; then
            cp -f $psa_license $target/skel/licenses/psa65lic.exe
            if [ -s $target/skel/licenses/psa65lic.exe ] ; then
                postlog "INFO" "Plesk license copied to skel/licenses/psa65lic.exe"
            else
                postlog "ERR" "Plesk license copy failed" "win2k_copyfail"
            fi
        else
            postlog "ERR" "Plesk license not found" "win2k_copyfail"
        fi
    else
        postlog "ERR" "No licenses available" "win2k_copyfail"
    fi

    rsync -av --files-from=:/panels/plesk/windows/6.5/filelist.plesk rsync://${KSIPADDR}/installs/panels/plesk/windows/6.5/ $target/skel/software/plesk/

    if [ -s $target/skel/software/plesk/filelist.plesk ] ; then
        postlog "INFO" "rsync of Plesk data complete"
    else
        postlog "ERR" "rsync of Plesk data failed"
    fi

fi


################################################################################
# Rsync the i386 source tree
rsync -av --files-from=:/windows/${winver}/${subver}/filelist.i386 rsync://${KSIPADDR}/installs/windows/${winver}/${subver}/ $target

if [ -s $target/filelist.i386 ] ; then
    postlog "INFO" "rsync of $winver/$subver/i386 complete"
else
    postlog "ERR" "rsync of $winver/$subver/i386 failed"
fi

################################################################################
# Cleanup
rm -f $target/filelist.*
cd /mnt
sync
umount ${target}

################################################################################
# Update our status
post "http://${KSIPADDR}/cgi-bin/register.cgi" "macaddr=${MACADDR}&ipaddr=${REALIP}&status=win2k_copydone"

/sbin/shutdown -rn now
