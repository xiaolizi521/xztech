#!/usr/bin/perl
# Ryan Nguyen
# ryry@4-25-07:
# Checks and tells if provisioning is working
# Populates 'respective' field in status/data xml file when -x flag is passed

use strict;
use XML::Simple;
use Data::Dumper;
use XML::Twig;
use vars qw(@res);

our $testservice = "";
our $testcron = "";
our $ksstat = "";
our $xmldata = "";
my $xmlfile = "/exports/kickstart/status/data";

# Runs the ksctl to pull the kickstart reported status from the database
# returns true of kickstart is "on" otherwise false
my $check = `/exports/kickstart/bin/ksctl status | awk '\{print \$3\}'`;
chomp($check);

if ($check eq "on") {
        $testservice = "true";
} else {
        $testservice = "false";
}

# Search for 'provision', exclude all commented-out entries first
# count search results in 'cronres' variable,
# The reprecussions of 'scraping' files for validation is very nasty but necessary here
# please take heed when troubleshooting
open(INFO, "/var/spool/cron/crontabs/root");
while (my $line = <INFO>) {
        chomp($line);
        push @res,$line;
}
close (INFO);

my $cronres=0;
foreach my $line (@res){
        if ($line =~ /^[^#]+\ \/exports\/kickstart\/bin\/provision\ .*$/) {
        #if ($line =~ /^[^#]+.*\/provision.*$/) {
                $cronres++;
        }
}

# If any cron entries containing "provision" found, return true.
if ($cronres > 0){
        $testcron = "true";
} 
else {
        $testcron = "false";
}

# Test Both Conditions
if (($testcron eq "true") && ($testservice eq "true")) {
        $ksstat="active";
} 
else {
        $ksstat="inactive";
}

# Update respective entry in $xmlfile and return nothing when -x argument is passed
# else has the program return english via stdout
if ($ARGV[0] eq "-x") {
        my $xml = XML::Simple->new();

        our $xmldata   = $xml->XMLin($xmlfile);
        # time() is an hour ahead so planb was setting the time to humanreadable YYYYMMDDHHMM via date 
        my $timeStamp = `date +%Y%m%d%H%M`;
        chomp $timeStamp;

        my %phash = ();
        $phash{ 'parent' } = 'kickstart';
        $phash{ 'status' } = $ksstat;
        $phash{ 'type' } = 'resource';
        $phash{ 'updated' } = $timeStamp;

        $xmldata->{provisioning} = \%phash;

        $xml->XMLout($xmldata, 
            KeepRoot   => 0, 
            OutputFile => $xmlfile,
            XMLDecl    => "<?xml version='1.0'?>",
        );
 #       my $base = @{$xmldata->{status}};
#        print Dumper($base) . "\n";

#} elsif ($ARGV[0] eq "-s") {
#print $ksstat;

# oi! new debug flag
} elsif ($ARGV[0] eq "-d") {
debug();

} else {
        print "Provisioning is currently $ksstat\n";
}

# Debug sauce when troubleshooting
# I leave in subroutine just-in-case 
sub debug {
        print "\n----debug----\n";
        print "testcron is $testcron\n";
        print "testservice is $testservice\n";
        print "cronres is $cronres\n";
        print "check is $check \n";
        print "ksstat is $ksstat \n";
#        print "----dumper------ \n";
}


