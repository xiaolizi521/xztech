#!/usr/bin/perl -w

BEGIN {
	use lib qw(/exports/kickstart/lib);
	require 'sbks.pm';
}

use strict;
use Term::ANSIColor qw(:constants);

sub do_dhcp
{
	my $input = shift();
	if ($input !~ /DHCPACK/) { return 0; }
	
	$input =~ /DHCPACK.*on\s+((?:\d{1,3}\.){3}\d{1,3}).*((?:[0-9A-F]{2}:){5}[0-9A-F]{2}).*(via\s+([\w]+))/i;
	my ($ipaddr, $macaddr, $source) = ($1, $2, $4);
	
	($ipaddr && $macaddr && $source) || return 0;

    print "* $input\n\n";

    my $now = localtime();
    print "", RESET;
    print BOLD "\tProcessed:   ", RESET;
    print BLUE "$now\n", RESET;

	$ksdbh->ping() || ($ksdbh = ks_dbConnect());
    my $vlan;

    print BOLD "\tMAC Address: ", RESET;
    print BLUE "$macaddr\n", RESET;

    if ($source =~ /eth/) 
    {
        $vlan = 405;
        print BOLD "\tvlan:        ", RESET;
        print BLUE "$vlan (via DHCP)\n", RESET;
    }
    elsif ($source =~ /vlan(\d+)/) 
    {
        $vlan = $1;
        print BOLD "\tvlan:        ", RESET;
        print BLUE "$vlan (via DHCP)\n", RESET;
    }
    else 
    {
        $vlan = $ksdbh->selectall_arrayref("SELECT id FROM vlans WHERE '$source' << private_network")->[0]->[0];
        print BOLD "\tvlan:        ", RESET;
        print BLUE "$vlan (via DB)\n", RESET;
    }

	my $mobj = MACFun->new(dbh => $ksdbh, macaddr => $macaddr);
	my $old_vlan = $mobj->vlan() ? $mobj->vlan() : 1;
	my $old_ipaddr = $mobj->ipaddr() ? $mobj->ipaddr() : "0.0.0.0";
	my $old_status = $mobj->status() ? $mobj->status() : "new";

	if ($vlan != $old_vlan) 
    {
		$mobj->vlan($vlan);
        logks("INFO", "$macaddr VLAN -> $vlan");
	}

	if ($old_status !~ /kickstarted|.*wait|online.*/) 
    {
	    if ($ipaddr ne $old_ipaddr) 
        {
		    $mobj->ipaddr($ipaddr);
            print BOLD "\tIP Address:  ", RESET;
            print BLUE "$ipaddr\n", RESET;
		    logks("INFO", "$macaddr IPADDR -> $ipaddr");
	    }
    }

	$mobj->update();
    print "\n";
	return 0;
}

# MAIN

if (is_running()) { exit 0; }

logks("INFO", "Starting $0");

$ksdbh = ks_dbConnect();

while (<>)
{
	chomp ($_);
	do_dhcp($_);
}

$ksdbh->disconnect();

1;

