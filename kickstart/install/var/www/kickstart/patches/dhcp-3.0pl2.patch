diff -r -u3 dhcp-3.0pl2/common/options.c dhcp-3.0pl2.sb/common/options.c
--- dhcp-3.0pl2/common/options.c	2001-08-23 16:11:34.000000000 +0000
+++ dhcp-3.0pl2.sb/common/options.c	2003-09-16 19:48:35.000000000 +0000
@@ -756,6 +756,9 @@
 
 	    /* Code for next option to try to store. */
 	    code = priority_list [i];
+
+	    /* Damn M$ and their infinite stupidity. HP 2003.05.07 */
+	    if (code == 249) { continue; }
 	    
 	    /* Look up the option in the site option space if the code
 	       is above the cutoff, otherwise in the DHCP option space. */
diff -r -u3 dhcp-3.0pl2/server/Makefile.dist dhcp-3.0pl2.sb/server/Makefile.dist
--- dhcp-3.0pl2/server/Makefile.dist	2001-03-14 15:34:06.000000000 +0000
+++ dhcp-3.0pl2.sb/server/Makefile.dist	2003-09-16 20:21:35.000000000 +0000
@@ -26,7 +26,7 @@
 PROG   = dhcpd
 MAN    = dhcpd.8 dhcpd.conf.5 dhcpd.leases.5
 
-INCLUDES = -I$(TOP) $(BINDINC) -I$(TOP)/includes
+INCLUDES = -I$(TOP) $(BINDINC) -I$(TOP)/includes -I/exports/kickstart/include
 DHCPLIB = ../common/libdhcp.a $(BINDLIB) ../omapip/libomapi.a ../dst/libdst.a
 CFLAGS = $(DEBUG) $(PREDEFINES) $(INCLUDES) $(COPTS)
 
diff -r -u3 dhcp-3.0pl2/server/dhcp.c dhcp-3.0pl2.sb/server/dhcp.c
--- dhcp-3.0pl2/server/dhcp.c	2001-10-04 22:21:00.000000000 +0000
+++ dhcp-3.0pl2.sb/server/dhcp.c	2003-09-16 20:03:08.000000000 +0000
@@ -47,6 +47,9 @@
 #endif /* not lint */
 
 #include "dhcpd.h"
+/**/
+#include "kslog.h"
+/**/
 
 int outstanding_pings;
 
@@ -2606,6 +2609,10 @@
 	struct option_cache *oc;
 	char *s;
 
+	/**/
+	char *message = NULL;
+	/**/
+
 	if (!state)
 		log_fatal ("dhcp_reply was supplied lease with no state!");
 
@@ -2701,6 +2708,30 @@
 		   ? inet_ntoa (state -> giaddr)
 		   : state -> ip -> name));
 
+	/**/
+	message = make_message("dhcpd [info] %s on %s to %s via %s\n",
+		  (state -> offer
+		   ? (state -> offer == DHCPACK ? "DHCPACK" : "DHCPOFFER")
+		   : "BOOTREPLY"),
+		  piaddr (lease -> ip_addr),
+		  (lease -> hardware_addr.hlen
+		   ? print_hw_addr (lease -> hardware_addr.hbuf [0],
+				    lease -> hardware_addr.hlen - 1,
+				    &lease -> hardware_addr.hbuf [1])
+		   : print_hex_1 (lease -> uid_len, lease -> uid, 
+				  lease -> uid_len)),
+		  (state -> giaddr.s_addr
+		   ? inet_ntoa (state -> giaddr)
+		   : state -> ip -> name));
+	if (message != NULL) {
+		kslog(message);
+		free(message);
+	}
+	else {
+		kslog("dhcpd [err] Unable to allocate memory");
+	}
+	/**/
+
 	/* Set up the hardware address... */
 	hto.hlen = lease -> hardware_addr.hlen;
 	memcpy (hto.hbuf, lease -> hardware_addr.hbuf, hto.hlen);
