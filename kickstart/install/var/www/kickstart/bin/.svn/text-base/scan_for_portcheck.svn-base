#!/usr/bin/perl -w

BEGIN {
	use lib qw(/exports/kickstart/lib);
	require 'sbks.pm';
}

use strict;
use Time::ParseDate;
use Net::Ping ();
use POSIX ":sys_wait_h";

if (is_running()) { exit 0; }

my $dbh = ks_dbConnect();

# grab pertinent information from rapid_reboot_queue table in db
my $servers = $dbh->selectall_arrayref("SELECT mac_address, started, last_updated FROM rapid_reboot_queue WHERE status = ?", undef, 5);

# SERV is a tag for this foreach loop
# this loop runs through the mac addresses one by one, running
# port checks on them - if even a single one succeeds, the box
# is considered up. An ICMP ping is not used, and shouldn't be -
# it is not a good test, even a kernel panic'd linux box will
# reply to a ping.
SERV: foreach my $row (@{$servers}) {
    my $macaddr = $row->[0];
    my $started = parsedate($row->[1]);
    my $last_updated = parsedate($row->[2]);
    my $lastCheck = 0;

	my $mobj = MACFun->new(dbh => $dbh, macaddr => $macaddr);
	my $ipaddr = $mobj->ipaddr();

    if ($ipaddr and $ipaddr =~ /^((\d{1,3}\.){3}\d{1,3})$/) {

        # skip if it hasn't been at least 5 minutes since
        # the RR came in -- most boxes are going to take
        # at least that long to get to a state where they
        # will reply to these checks
        if (($started + 300) > time()) { next SERV; }
        if (($started + 900) < time()) {
            # we're checking something that has now
            # been in the queue over 900 seconds (15 minutes)
            # so we're going to add a 'fatal' flag --
            # if this doesn't succeed in the foreach
            # loop below, we're going to flag it as
            # a port_fail
            $lastCheck = 1;
        }

        my $tcp_ping = Net::Ping->new("tcp", 3);
        $tcp_ping->service_check(1);

        # this is the list of ports to check, in order --
        # you can add to this list safely, put it in the
        # place you'd think appropriate for its likelihood
        # of being an alive port compared to the others
        # 22 = SSH
        # 3389 = Remote Desktop
        # 80 = HTTP
        # 25 = SMTP
        # 225 = sbadm
        # 21 = FTP
        # 443 = HTTP SSL
        my @port_list = (22, 3389, 80, 25, 225, 21, 443);
        my $failed = 0;

        foreach (@port_list) {
            $tcp_ping->{port_num} = $_;

            print "Checking port ".$_." on ".$ipaddr.".. ";

            if (!$tcp_ping->ping($ipaddr)) {
                print "failed.\n";
                $failed = $failed + 1;
            } else {
                print "success!\n";
                # the check worked - update the db
                # and set the status to 8, which is
                # success
                $dbh->do("  UPDATE rapid_reboot_queue
                            SET status=8, last_updated=now()
                            WHERE mac_address = ?
                            AND active='t'", undef, $macaddr);
                next SERV;
            }
        }

        my $port_size = @port_list;

        if ($failed == $port_size) {
            if ($lastCheck == 1) {
                # we failed, and the number of failed port checks
                # is equal to the number of ports to be checked --
                # update the db with status 7, which is port_fail,
                # to signify that the RR succeeded up to this point,
                # but we were unable to verify any online ports
                #
                # if the customer's primary ip is not_monitored,
                # chances are Ocean, when it gets this entry,
                # will consider it a success, since we did see
                # a DHCP request, and if the primary ip is not
                # monitored it usually means a firewall is in place
                # but that's for Ocean to decide, not this script
                $dbh->do("  UPDATE rapid_reboot_queue
                            SET status=7, last_updated=now()
                            WHERE mac_address = ?
                            AND active='t'", undef, $macaddr);
                print "No ports on ".$ipaddr.". FAILED!\n";
            } else {
                # we failed, but this isn't the last check, so
                # just update the last_updated stamp and continue
                $dbh->do("  UPDATE rapid_reboot_queue
                            SET last_updated=now()
                            WHERE mac_address = ?
                            AND active='t'", undef, $macaddr);
                print "No ports on ".$ipaddr.". Will try again.\n";
            }
        } else {
            # this is for now no different, aside from the extra
            # print message - the difference between this and the
            # above is that if we're here, the number of port checks
            # doesn't add up to the number of ports in the array,
            # BUT there doesn't appear to have been a success
            # THIS SHOULD NEVER HAPPEN - so it sets to failure
            # even if this isn't supposed to be the last check
            print "Unknown result on ".$ipaddr."! UNKNOWN!\n";
            print "Assuming failure for now.\n";

            $dbh->do("  UPDATE rapid_reboot_queue
                        SET status=7, last_updated=now()
                        WHERE mac_address = ?
                        AND active='t'", undef, $macaddr);
        }
    }
}

$dbh->disconnect();

1;
