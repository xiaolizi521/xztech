#!/bin/bash
# =======================================================================
# Company:              ServerBeach
# Copyright(c):         ServerBeach, Ltd. 2006-2008
# Project:              Kickstart Sub-System
# Pri. Code Devloper:   SB Development Team
# Creation Date:        2006-09-14
#
# File Type:            Taskfile     
# File Name:            linkserver.txt
# Dependencies:         The SBRescue PXE RAM Disk Envrionment.    
#
# Discription:
# This is the linkserver task file the gets loaded and executed on a local
# server by the SBRescue ram disk image.  
# =======================================================================

# Source the following files and include them as part of this script
. /etc/local.sh
. /usr/lib/sbks_lib.sh
if [ $ks_public_ipaddr ] ; then KSIPADDR=$ks_public_ipaddr ; fi

# Export the following environment variables
export KSIPADDR MACADDR IPADDR REALIP

[ -e /tmp/linkinfo.txt ] && rm -f /tmp/linkinfo.txt

echo "My MAC address is: $MACADDR"
echo
echo "Please make sure the following information is entered accurately"
echo
echo -n "Customer number: "
read link_customer_number
echo -n "Server number:   "
read link_server_number
echo -n "Admin username:  "
read link_admin_username
echo -n "Link reason:     "
read link_reason
echo
postlog "INFO" "Fetching link information"


curl --fail --silent --show-error \
    --url "http://${KSIPADDR}/cgi-bin/linkserver.cgi" \
    --output "/tmp/linkinfo.txt" \
    --data "macaddr=${MACADDR}" \
    --data "ipaddr=${IPADDR}" \
    --data "customer_number=${link_customer_number}" \
    --data "server_number=${link_server_number}" \
    --data "username=${link_admin_username}" \
    --data "reason=${link_reason}"

if [ -s /tmp/linkinfo.txt ] ; then
    . /tmp/linkinfo.txt
else
    postlog "ERR" "Failed to fetch link information"
fi

dc_location="$dc_abbr:$switch_name-$switch_port"

echo
echo "This is what we have so far:"
echo "Customer number = $customer_number"
echo "Server number   = $server_number"
echo "DC location     = $dc_location";
echo "IP address      = $ip_address";
echo "Admin username  = $username";
echo "Link reason     = $reason";
echo
echo "Is the above information correct? [y/N]"
read correct
echo x"$correct" | grep "x[yY]" > /dev/null
if [ $? -eq 0 ] ; then
	:
else
	exit 1
fi

postlog "INFO" "Linking $MACADDR to $customer_number-$server_number"

curl --fail --silent --show-error \
    --url "http://${KSIPADDR}/cgi-bin/linkserver.cgi" \
    --output "/tmp/linkinfo.txt" \
    --data "macaddr=${MACADDR}" \
    --data "ipaddr=${IPADDR}" \
    --data "customer_number=${link_customer_number}" \
    --data "server_number=${link_server_number}" \
    --data "username=${link_admin_username}" \
    --data "reason=${link_reason}" \
    --data "dc_abbr=${dc_abbr}" \
    --data "switch_name=${switch_name}" \
    --data "switch_port=${switch_port}" \
    --data "doit=1"

. /tmp/linkinfo.txt

if [ x"$online" == x"success" ] ; then
    postlog "INFO" "$MACADDR marked online"
else
    postlog "ERR" "$MACADDR NOT marked online"
fi

if [ x"$link" == x"success" ] ; then
    postlog "INFO" "$MACADDR linked to $customer_number-$server_number"
else
    postlog "ERR" "$MACADDR NOT linked to $customer_number-$server_number"
fi

cat <<WARN

If something failed above, try running the link script again.  If it 
fails twice, please submit a bugzilla ticket and contact a developer if
this is an emergency.  Please include the MAC address, server location,
customer and server number, and any other relevant errors or information
in the bugzilla ticket.

You may reboot now if everything worked.  The server should boot from
the hard drive by default.

WARN

exit 0
